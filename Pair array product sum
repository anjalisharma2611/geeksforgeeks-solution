Pair array product sum


Given a array a[] of non-negative integers. Count the number of pairs (i, j) in the array such that a[i] + a[j] < a[i]*a[j]. (the pair (i, j) and (j, i) are considered same and i should not be equal to j)

Input:
The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case contains an integer n denoting the size of the array. The next line contains n space separated integers respectively forming the array.

Output:
Print the total number of pairs possible in the array according to the problem statement.

Constraints:
1<=T<=10^5
1<=n<=10^5
1<=a[i]<=10^5

Example:
Input:
2
3
3 4 5
3
1 1 1 

Output:
3
0


CODE:

Execution Time:0.01:


#include <iostream>
using namespace std;

int main() {
     int t;
     cin>>t;
     while(t--)
     {
         int n;
         cin>>n;
         int a[n];
         for(int i=0;i<n;i++)
          cin>>a[i];
          int c=0;
         for(int i=0;i<n;i++)
         {
             for(int j=i+1;j<n;j++)
             {
                 if( a[i] + a[j] < a[i]*a[j])
                  c++;
             }
         }
         cout<<c<<endl;
     }
	return 0;
}
