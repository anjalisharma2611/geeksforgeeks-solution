Last index of One


Given a string S consisting only '0's and '1's,  print the last index of the '1' present in it.

Input:
First line of the input contains the number of test cases T, T lines follow each containing a stream of characters.

Output:
Corresponding to every test case, output the last index of 1. If 1 is not present, print "-1" (without quotes).

Constraints:
1 <= T <= 110
1 <= |S| <= 106

Example:
Input:
2
00001
0
Output:
4
-1

Explanation:
Testcase 1: Last index of  1 in given string is 4.
Testcase 2: Since, 1 is not present, so output is -1.

Execution Time:0.39

#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
	int t;
	cin>>t;
	string u;
	getline(cin,u);
	while(t--)
	{
	    int f=0;
	    string s;
	    getline(cin,s);
	    int i;
	    for(i=s.size()-1;i>=0;i--)
	    {f=0;
	        if(s[i]=='1')
	         {
	             f=1;
	             break;
	             
	         }
	    }
	    if(f==0)
	     cout<<-1<<endl;
	    else
	     cout<<i<<endl;
	}
	return 0;
}
